// This file is auto-generated by @hey-api/openapi-ts

export const $BaseSlideShowOutput = {
    additionalProperties: false,
    properties: {
        display: {
            default: 'none',
            enum: ['filename', 'caption', 'none'],
            type: 'string'
        },
        duration: {
            description: 'Slide duration in seconds',
            examples: [3.2],
            format: 'float',
            type: 'number'
        },
        sort: {
            default: 'filename',
            enum: ['filename', 'natural', 'random'],
            type: 'string'
        },
        transition_duration: {
            description: 'Duration of fade transition in seconds',
            examples: [3.2],
            format: 'float',
            type: 'number'
        }
    },
    required: ['duration', 'sort', 'transition_duration', 'display'],
    type: 'object'
} as const;

export const $CaptionsDeleteInputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/CaptionsDeleteInputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        captions_to_delete: {
            description: 'List of captions to be deleted',
            items: {
                type: 'string'
            },
            type: 'array'
        }
    },
    required: ['captions_to_delete'],
    type: 'object'
} as const;

export const $CaptionsOutputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/CaptionsOutputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        captions: {
            additionalProperties: {
                type: 'string'
            },
            description: 'Map of captions associated with files',
            type: 'object'
        }
    },
    required: ['captions'],
    type: 'object'
} as const;

export const $CaptionsSetInputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/CaptionsSetInputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        captions: {
            additionalProperties: {
                type: 'string'
            },
            description: 'Map of captions associated with files. Will upsert and not delete existing if not specified',
            type: 'object'
        }
    },
    required: ['captions'],
    type: 'object'
} as const;

export const $ErrorDetail = {
    additionalProperties: false,
    properties: {
        location: {
            description: "Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'",
            type: 'string'
        },
        message: {
            description: 'Error message text',
            type: 'string'
        },
        value: {
            description: 'The value at the given location'
        }
    },
    type: 'object'
} as const;

export const $ErrorModel = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/ErrorModel.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        detail: {
            description: 'A human-readable explanation specific to this occurrence of the problem.',
            examples: ['Property foo is required but is missing.'],
            type: 'string'
        },
        errors: {
            description: 'Optional list of individual error details',
            items: {
                '$ref': '#/components/schemas/ErrorDetail'
            },
            type: 'array'
        },
        instance: {
            description: 'A URI reference that identifies the specific occurrence of the problem.',
            examples: ['https://example.com/error-log/abc123'],
            format: 'uri',
            type: 'string'
        },
        status: {
            description: 'HTTP status code',
            examples: [400],
            format: 'int64',
            type: 'integer'
        },
        title: {
            description: 'A short, human-readable summary of the problem type. This value should not change between occurrences of the error.',
            examples: ['Bad Request'],
            type: 'string'
        },
        type: {
            default: 'about:blank',
            description: 'A URI reference to human-readable documentation for the error.',
            examples: ['https://example.com/errors/example'],
            format: 'uri',
            type: 'string'
        }
    },
    type: 'object'
} as const;

export const $FolderFilesOutputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/FolderFilesOutputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        files: {
            description: 'List of all the files (recursively) in the folder',
            items: {
                type: 'string'
            },
            type: 'array'
        }
    },
    required: ['files'],
    type: 'object'
} as const;

export const $FolderRenameInputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/FolderRenameInputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        new_foldername: {
            type: 'string'
        }
    },
    required: ['new_foldername'],
    type: 'object'
} as const;

export const $FoldersOutputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/FoldersOutputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        folders: {
            description: 'List of all the folders that may contain photos',
            items: {
                type: 'string'
            },
            type: 'array'
        }
    },
    required: ['folders'],
    type: 'object'
} as const;

export const $PiSlideStatusOutputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/PiSlideStatusOutputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        command_output: {
            description: 'The command from the corresponding systemctl call',
            type: 'string'
        },
        status_code: {
            description: 'The status code of the response',
            format: 'int64',
            type: 'integer'
        }
    },
    required: ['command_output', 'status_code'],
    type: 'object'
} as const;

export const $SlideshowsInputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/SlideshowsInputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        active_slideshow: {
            description: 'The active slideshow',
            examples: ['world-wonders'],
            type: 'string'
        }
    },
    required: ['active_slideshow'],
    type: 'object'
} as const;

export const $SlideshowsOutputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/SlideshowsOutputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        active_slideshow: {
            description: 'The active slideshow',
            examples: ['world-wonders'],
            type: 'string'
        },
        slideshows: {
            additionalProperties: {
                '$ref': '#/components/schemas/BaseSlideShowOutput'
            },
            type: 'object'
        }
    },
    required: ['active_slideshow', 'slideshows'],
    type: 'object'
} as const;

export const $SpecificSlideshowInputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/SpecificSlideshowInputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        display: {
            default: 'none',
            enum: ['filename', 'caption', 'none'],
            type: 'string'
        },
        duration: {
            description: 'Slideshow delay in seconds',
            examples: [3.2],
            format: 'float',
            type: 'number'
        },
        sort: {
            default: 'filename',
            enum: ['filename', 'natural', 'random'],
            type: 'string'
        },
        transition_duration: {
            description: 'Duration of fade transition in seconds',
            examples: [3.2],
            format: 'float',
            type: 'number'
        }
    },
    required: ['duration'],
    type: 'object'
} as const;

export const $SpecificSlideshowOutputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['https://example.com/schemas/SpecificSlideshowOutputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        command: {
            description: 'Actual rayimg command that will run the slideshow',
            type: 'string'
        },
        display: {
            default: 'none',
            enum: ['filename', 'caption', 'none'],
            type: 'string'
        },
        duration: {
            description: 'Slide duration in seconds',
            examples: [3.2],
            format: 'float',
            type: 'number'
        },
        sort: {
            default: 'filename',
            enum: ['filename', 'natural', 'random'],
            type: 'string'
        },
        transition_duration: {
            description: 'Duration of fade transition in seconds',
            examples: [3.2],
            format: 'float',
            type: 'number'
        }
    },
    required: ['command', 'duration', 'sort', 'transition_duration', 'display'],
    type: 'object'
} as const;